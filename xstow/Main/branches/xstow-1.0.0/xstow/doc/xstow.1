.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "XSTOW 1"
.TH XSTOW 1 "2010-07-22" "XStow 1.0.0" "XStow Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
XStow, replacement for GNU Stow
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
xstow        [\s-1OPTION\s0 ...] \s-1PACKAGE\s0
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
XStow is a replacement of \s-1GNU\s0 Stow (\fBstow\fR) written in \*(C+. It
supports all features of Stow with some extensions.
.PP
XStow as \s-1GNU\s0 Stow, are programs for managing the installation of software
packages, keeping them separate (/usr/local/stow/emacs
vs. /usr/local/stow/perl, for example) while making them appear to be
installed in the same place (/usr/local).
.SH "USAGE"
.IX Header "USAGE"
xstow [\s-1OPTION\s0 ...] \s-1PACKAGE\s0
.PP
Install a package
.PP
.Vb 1
\&        xstow foobar
.Ve
.PP
Uninstall package
.PP
.Vb 1
\&        xstow \-D foobar
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-dl \-debug\-level\fR \s-1INT\s0" 4
.IX Item "-dl -debug-level INT"
Set's the debug level. An unsigned integer is accepted. The
default value is 0.
.IP "\fB\-dm \-debug\-module\fR [ALL|ARG|MAIN|TREE|CPPDIR]" 4
.IX Item "-dm -debug-module [ALL|ARG|MAIN|TREE|CPPDIR]"
Filter messages from a specific module.
.IP "\fB\-h \-help\fR" 4
.IX Item "-h -help"
Shows a help screen.
.IP "\fB\-V \-Version\fR" 4
.IX Item "-V -Version"
Displays XStows version number and supported features.
.IP "\fB\-n \-no\fR" 4
.IX Item "-n -no"
Do not actually make changes
.IP "\fB\-c \-conflicts\fR" 4
.IX Item "-c -conflicts"
Scan for conflicts, implies \fB\-n\fR.
.IP "\fB\-s \-simulate\fR" 4
.IX Item "-s -simulate"
Simulate installation. If this option is set permission problems will
be ignored and \fB\-verbose\fR will be set to 1.
.IP "\fB\-d \-dir\fR \s-1DIR\s0" 4
.IX Item "-d -dir DIR"
Set stow dir to \s-1DIR\s0. The default is the current directory.
.IP "\fB\-d \-target\fR \s-1DIR\s0" 4
.IX Item "-d -target DIR"
Set target to \s-1DIR\s0. The default is the parent of the stow directory.
.IP "\fB\-v \-verbose\fR [0|1|2|3]" 4
.IX Item "-v -verbose [0|1|2|3]"
Increase verboseness. Possible levels are 0,1,2 or 3. Simple setting
\&\fB\-v\fR or \fB\-verbose\fR adds 1.
.IP "\fB\-D \-delete\fR" 4
.IX Item "-D -delete"
Unstow instead of stow. Deinstall the package.
.IP "\fB\-R \-restow\fR" 4
.IX Item "-R -restow"
The same like \fB\-delete\fR followed by an reinstall.
.IP "\fB\-ap \-absolute\-path\fR" 4
.IX Item "-ap -absolute-path"
Create symlinks with absolute path names. XStow can always handle
packages which were installed with this option. Installing one package
with absolute path names and one without is no problem. Only the
creation of the symlinks will be affected by this option. This will
cause that if one package is installed with this option and one
without, some of the symlinks of the first package, when they have to
be recreated will be recreated as relative ones. It is not good idea
doing this, even XStow does not have any problems with it.
\&\fIWarning:\fR Breaks compatibility with Stow!
.IP "\fB\-tr \-traversable\fR \s-1LINKS\s0" 4
.IX Item "-tr -traversable LINKS"
A list of links pointing to directories, that can be ignored.
eg.: /usr/local/man is a link to /usr/local/share/man
\&\fIWarning:\fR Breaks compatibility with Stow!
.IP "\fB\-tkt \-tr\-keep\-targets\fR" 4
.IX Item "-tkt -tr-keep-targets"
Add the list of traversable links also to the keep targets list. This
prevents the targets of the links from beeing removed by XStow, which
would cause that the traversable link becomes a dead link.
.IP "\fB\-tre \-tr\-auto\fR \s-1PATTERN\s0" 4
.IX Item "-tre -tr-auto PATTERN"
Automatically add links which target matches this pattern.
.IP "\fB\-tre \-tr\-auto\-regex\fR \s-1REGEX\s0" 4
.IX Item "-tre -tr-auto-regex REGEX"
Automatically add links which target matches this pattern.
.IP "\fB\-kd \-keep\-dirs\fR \s-1DIR\s0" 4
.IX Item "-kd -keep-dirs DIR"
A list of directories, that should not be removed when a package will be
removed. \fIWarning:\fR Breaks compatibility with Stow!
.IP "\fB\-i \-ignore\fR \s-1PATTERN\s0" 4
.IX Item "-i -ignore PATTERN"
Ignore files that matches this pattern.
.IP "\fB\-ire \-ignore\-regex\fR \s-1REGEX\s0" 4
.IX Item "-ire -ignore-regex REGEX"
Ignore files that matches this expression.
.IP "\fB\-ni \-nignore\fR \s-1PATTERN\s0" 4
.IX Item "-ni -nignore PATTERN"
Ignore everything except file and directories matching this
expression. eg: \*(L"systree/bintree systree/headertree\*(R".
For using nignore support fnmatch and configration file
support has to be enabled. For more details see \fIxstow.ini\fR\|(5).
.IP "\fB\-cp \-copy\fR \s-1PATTERN\s0" 4
.IX Item "-cp -copy PATTERN"
Copy files or directories that matching this pattern.
.IP "\fB\-cre \-copy\-regex\fR \s-1REGEX\s0" 4
.IX Item "-cre -copy-regex REGEX"
Copy files or directories that matching this expression.
.IP "\fB\-ifd \-i\-file\-in\-dir\fR \s-1DIR/FILE\s0" 4
.IX Item "-ifd -i-file-in-dir DIR/FILE"
Ignore this file in this directory. (Relative to the package dir.)
.IP "\fB\-cfd \-c\-file\-in\-dir\fR \s-1DIR/FILE\s0" 4
.IX Item "-cfd -c-file-in-dir DIR/FILE"
Copy this file in this directory. (Relative to the package dir.)
.IP "\fB\-sd \-stow\-dirs\fR \s-1DIR\s0" 4
.IX Item "-sd -stow-dirs DIR"
A list of other stow dirs, that xstow is allowed change
.IP "\fB\-sda \-sd\-auto\fR \s-1PATTERN\s0" 4
.IX Item "-sda -sd-auto PATTERN"
Automatically add directories to the list when matching this
expression.
.IP "\fB\-sde \-sd\-auto\-regex\fR \s-1REGEX\s0" 4
.IX Item "-sde -sd-auto-regex REGEX"
Automatically add directories to the list when matching this
expression.
.IP "\fB\-pd \-protect\-dirs\fR \s-1DIR\s0" 4
.IX Item "-pd -protect-dirs DIR"
A list of other dirs, that xstow is not allowed change
.IP "\fB\-pda \-pd\-auto\fR \s-1PATTERN\s0" 4
.IX Item "-pda -pd-auto PATTERN"
Automatically add directories to the list when matching this
expression.
.IP "\fB\-pde \-pd\-auto\-regex\fR \s-1REGEX\s0" 4
.IX Item "-pde -pd-auto-regex REGEX"
Automatically add directories to the list when matching this
expression.
.IP "\fB\-pdt \-pd\-targets\fR \s-1DIRS\s0" 4
.IX Item "-pdt -pd-targets DIRS"
A list of dirs, xstow is allowed to change.
.IP "\fB\-pta \-pdt\-add\-traversable\fR \s-1DIRS\s0" 4
.IX Item "-pta -pdt-add-traversable DIRS"
Automatically add the targets of traversable links to the targets list.
.IP "\fB\-f \-force\fR" 4
.IX Item "-f -force"
Skip conflicts if possible.
.IP "\fB\-F file\fR" 4
.IX Item "-F file"
Read this configuration file too.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
.IP "\fB0\fR" 4
.IX Item "0"
On success.
.IP "\fB1\fR" 4
.IX Item "1"
On a missspelled call of xstow.
.IP "\fB2\fR" 4
.IX Item "2"
If an internal error occoured.
.IP "\fB3\fR" 4
.IX Item "3"
Installing the package failed of some reason. All the prechecking was
ok, but the execution of the exec list failed.
.IP "\fB4\fR" 4
.IX Item "4"
Installing a package failed.
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
Since the debugging of the command line parsing can be hard if the
debugging level is set by the command line there are two evironment
variables:
.IP "\fB\s-1XSTOW_DEBUG_LEVEL\s0\fR" 4
.IX Item "XSTOW_DEBUG_LEVEL"
Same as the \fB\-debug\-level\fR option.
.IP "\fB\s-1XSTOW_DEBUG_MODULE\s0\fR" 4
.IX Item "XSTOW_DEBUG_MODULE"
Same as the \fB\-debug\-module\fR option.
.Sp
Both values will be overwritten by the settings of the command line,
after the command line was parsed.
.IP "\fB\s-1XSTOW_USE_CURSES\s0\fR" 4
.IX Item "XSTOW_USE_CURSES"
Same as the \fB\-no\-curses\fR option.
.Sp
In later versions xstow tried detecting the terminal width and height,
by default at the startup routine. Even if this value is only used by
the help screen. The result was:
.Sp
.Vb 2
\&    $ TERM="" xstow 
\&    Error opening terminal: unknown.
.Ve
.Sp
The error message is reported by the ncurses lib. This can cause problems
if you wan't start xstow as a cron job.
Now xstow tries detecting the terminal width not in it's startup, but
when the help screen is printed out. As an extra option you can set
the environment variable \fB\s-1XSTOW_USE_CURSES\s0\fR=\*(L"0\*(R" this will tell xstow
not using curses anyway.
.SH "COFIGURATION FILES"
.IX Header "COFIGURATION FILES"
The configuration file xstow.ini can be located in /etc and/or in the 
current stow directory. For possible settings and syntax 
of this file see \fIxstow.ini\fR\|(5)
.PP
In this manpage there are some detailed informations of some special
settings of XStow too. Please read it!
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Sh "Common Usage"
.IX Subsection "Common Usage"
As an example we install the ixlib library into the /usr/local/ tree.
.PP
.Vb 4
\&        tar xvfz ixlib\-0.96.2.tar.gz
\&        cd ixlib\-0.96.2
\&        ./configure
\&        make
.Ve
.PP
So far, this was business as usual.
.PP
\&\fINote:\fR by default the configure script prepares the application for
beeing installed into /usr/local/. Have a look at configure \-\-help for
more info.
.PP
Now installation is done by not installing ixlib directly into
/usr/local/, we install it into /usr/local/stow/ixlib\-0.96.2/.
.PP
.Vb 1
\&        make install prefix=/usr/local/stow/ixlib\-0.96.2/
.Ve
.PP
The last point is creating all necessare symlinks so that ixlib's
include files can be found by the compiler in
/usr/local/include. Therefore we are using xstow.
.PP
.Vb 2
\&        cd /usr/local/stow
\&        xstow ixlib\-0.96.2
.Ve
.PP
And all symlinks will be created.
.Sh "Installing XStow by using XStow"
.IX Subsection "Installing XStow by using XStow"
After calling the configure script and make, XStow is installed into
the stow directory as I showed it in the upper example.
.PP
.Vb 1
\&        make install prefix=/usr/local/stow/xstow\-0.1.0
.Ve
.PP
Then you switch to the stow directory and call XStow
.PP
.Vb 2
\&        cd /usr/local/stow
\&        xstow\-0.1.0/bin/xstow xstow\-0.1.0
.Ve
.PP
That is it.
.SH "COMPATIBLE"
.IX Header "COMPATIBLE"
.Sh "Link Creation"
.IX Subsection "Link Creation"
By default XStow is fully Stow compatible. The usage of some of the
advanced features can cause that Stow cannot handle the tree any
more.
.Sh "Command Line Options"
.IX Subsection "Command Line Options"
XStow supports all command line options of Stow. Even it's
format.
.PP
Eg.:
	xstow \-\-verbose=2 foobar
.SH "BUGS"
.IX Header "BUGS"
There are some nitty gritty cases, but no known bugs.
.SH "WHY"
.IX Header "WHY"
Stow requires Perl. But what's on systems where no Perl is available,
or not yet installed? I tried compiling Stow with \fBperlcc\fR, but it
failed.
.SH "AUTHORS"
.IX Header "AUTHORS"
XStow was written by Martin Oberzalek <kingleo@gmx.at>.
.SH "COPYING"
.IX Header "COPYING"
XStow a replacement of \s-1GNU\s0 Stow written in \*(C+.
.PP
Copyright (C) 2002\-2005 by Martin Oberzalek <kingleo@gmx.at>
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, \s-1MA\s0 02139, \s-1USA\s0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIxstow.ini\fR\|(5) \fImerge\-info\fR\|(1) \fIstow\fR\|(1)
.PP
\&\s-1GNU\s0 Stow has an excelent documentation. Have a look at the manual.
http://www.gnu.org/software/stow/
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 35:" 4
.IX Item "Around line 35:"
Can't have a 0 in =over 0
.IP "Around line 206:" 4
.IX Item "Around line 206:"
Can't have a 0 in =over 0
.IP "Around line 237:" 4
.IX Item "Around line 237:"
Can't have a 0 in =over 0
